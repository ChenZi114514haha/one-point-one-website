<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="68mm"
   height="19mm"
   viewBox="0 0 68 19"
   version="1.1"
   id="svg1"
   inkscape:version="1.4.2 (f4327f4, 2025-05-13)"
   sodipodi:docname="logo.svg"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <sodipodi:namedview
     id="namedview1"
     pagecolor="#ffffff"
     bordercolor="#000000"
     borderopacity="0.25"
     inkscape:showpageshadow="2"
     inkscape:pageopacity="0.0"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#d1d1d1"
     inkscape:document-units="mm"
     inkscape:zoom="1.74"
     inkscape:cx="118.96552"
     inkscape:cy="125"
     inkscape:window-width="1920"
     inkscape:window-height="974"
     inkscape:window-x="-11"
     inkscape:window-y="-11"
     inkscape:window-maximized="1"
     inkscape:current-layer="layer1" />
  <defs
     id="defs1">
    <linearGradient
       id="swatch39">
      <stop
         style="stop-color:#000000;stop-opacity:1;"
         offset="0"
         id="stop39" />
    </linearGradient>
    <meshgradient
       inkscape:collect="always"
       id="meshgradient27"
       gradientUnits="userSpaceOnUse"
       x="94.928825"
       y="138.35298"
       gradientTransform="matrix(1.1352135,0,0,1.1352136,-76.46956,-145.02696)">
      <meshrow
         id="meshrow27">
        <meshpatch
           id="meshpatch27">
          <stop
             path="c 2.60282,0  5.20564,0  7.80846,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop28" />
          <stop
             path="c 0,1.4003  0,2.8006  0,4.2009"
             style="stop-color:#1d2290;stop-opacity:1"
             id="stop29" />
          <stop
             path="c -2.60282,0  -5.20564,0  -7.80846,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop30" />
          <stop
             path="c 0,-1.4003  0,-2.8006  0,-4.2009"
             style="stop-color:#1d2290;stop-opacity:1"
             id="stop31" />
        </meshpatch>
      </meshrow>
    </meshgradient>
  </defs>
  <g
     inkscape:label="图层 1"
     inkscape:groupmode="layer"
     id="layer1">
    <text
       xml:space="preserve"
       style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:6.89742px;font-family:SimSun-ExtG;-inkscape-font-specification:SimSun-ExtG;text-align:start;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:url(#meshgradient27);fill-opacity:1;stroke:#000000;stroke-width:0.129326;stroke-opacity:1"
       x="30.540518"
       y="16.855997"
       id="text2"
       transform="scale(0.9755358,1.0250777)"><tspan
         sodipodi:role="line"
         id="tspan2"
         style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-family:SimSun-ExtG;-inkscape-font-specification:SimSun-ExtG;fill:url(#meshgradient27);fill-opacity:1;stroke:#000000;stroke-width:0.129326;stroke-opacity:1"
         x="30.540518"
         y="16.855997">1.1</tspan></text>
    <path
       d="m 0.60958569,5.4793754 q 0,-0.6434595 0.090648,-1.2225895 0.090648,-0.57912 0.2666001,-1.10104 0.17595571,-0.52193 0.44255681,-0.97951 0.2666012,-0.45757 0.5865216,-0.8079 0.3465809,-0.37894001 0.7464821,-0.62203001 0.3999011,-0.24308 0.8637862,-0.35033 0.4692155,-0.1144 1.0024177,-0.1144 0.8957772,0 1.636928,0.40754 0.7411488,0.40753001 1.258355,1.12964001 0.5225367,0.72212 0.7998015,1.66587 0.2772647,0.93661 0.2772647,1.9804595 0,1.12249 -0.3092567,2.09485 -0.3039244,0.9652 -0.8691176,1.6873199 -0.5598618,0.71495 -1.3170076,1.1153397 -0.7571458,0.39323 -1.6315966,0.39323 -0.8211288,0 -1.5356189,-0.38607 Q 2.2038598,9.9765253 1.6866555,9.2758453 1.1747815,8.5751854 0.89218629,7.5956754 q -0.2825971,-0.9795 -0.2825971,-2.1163 z M 2.0865531,4.7215259 q 0,1.2440295 0.1919526,2.2878895 0.1919517,1.04384 0.5491972,1.80171 0.3572446,0.7507099 0.842457,1.1510799 0.4905457,0.3932397 1.0557389,0.3932397 0.479881,0 0.9064418,-0.27168 Q 6.0642347,9.8049253 6.3894873,9.2543953 6.71474,8.7038754 6.8906957,7.8959554 q 0.181288,-0.81505 0.181288,-1.8875 0,-1.1725395 -0.2079476,-2.1663395 -0.2026163,-1.00096 -0.5705255,-1.69448 -0.362576,-0.70066 -0.8584549,-1.0796 -0.4958761,-0.38607001 -1.0664025,-0.38607001 -0.4905447,0 -0.9171046,0.28598 -0.4265617,0.28599001 -0.7304861,0.82221001 -0.298593,0.52908 -0.4692174,1.27264 -0.165292,0.74357 -0.165292,1.65873 z m 0.5012084,-3.64633 q -0.8851136,0.72927 -1.3436664,1.86606 -0.45855371,1.12965 -0.45855371,2.5524195 0,1.17969 0.29859301,2.15921 0.2985931,0.97234 0.8797823,1.6729999 Q 2.5451059,10.019405 3.4035589,10.398335 2.3584856,9.6833753 1.7399713,8.4321854 1.1214587,7.1809954 1.1214587,5.3649859 q 0,-0.908 0.1599606,-1.63726 0.1652911,-0.72927 0.4905448,-1.37274 0.330585,-0.65062 0.8157974,-1.27979 z M 5.3710728,0.78205589 q 0.6025174,0.42898001 1.0237459,1.18684001 0.4265617,0.75072 0.6398417,1.80172 0.2132808,1.05099 0.2132808,2.3093395 0,1.19399 -0.2452728,2.0734 -0.2399405,0.8722499 -0.6824973,1.5443199 0.4425568,-0.44328 0.7198216,-1.0009399 0.2825961,-0.56483 0.4158962,-1.27265 0.133301,-0.71497 0.133301,-1.60867 0,-1.2797895 -0.2666011,-2.3522395 Q 7.06132,2.3907359 6.5547794,1.6900759 6.053571,0.98225589 5.3710728,0.78205589 Z M 11.16697,4.1924459 v 0.9509 q 0.447894,-0.46472 0.826466,-0.70781 0.383902,-0.24309 0.911774,-0.24309 1.508959,0 1.508959,2.0090495 v 3.2602399 q 0,0.46473 0.165289,0.5862797 0.165289,0.12154 0.501206,0.12154 v 0.39323 H 12.51064 v -0.39323 q 0.341247,0 0.495877,-0.14299 0.15996,-0.1501397 0.15996,-0.6220197 V 5.9512554 q 0,-0.37893 -0.09062,-0.6363195 -0.08533,-0.26453 -0.255937,-0.40037 -0.170628,-0.13585 -0.415897,-0.13585 -0.303922,0 -0.597185,0.21449 -0.287933,0.20734 -0.639844,0.6363095 v 3.7750299 q 0,0.32173 0.07999,0.49332 0.07998,0.1715997 0.213279,0.2144897 0.138632,0.0429 0.394569,0.0572 v 0.39322 H 9.2794703 v -0.39322 q 0.325253,0 0.50121,-0.1144 0.175956,-0.1215397 0.175956,-0.5433697 V 6.3444854 q 0,-0.47187 -0.15996,-0.75786 -0.15996,-0.2931395 -0.517206,-0.4432795 v -0.23594 l 1.6849157,-0.71496 z m -1.034411,1.9161095 v 3.2816799 q 0,0.32174 -0.03733,0.46474 -0.03199,0.14298 -0.1492957,0.3145797 0.5225367,-0.0644 0.5225367,-0.7793197 V 5.9798654 q 0,-0.35749 -0.191952,-0.6077295 -0.186621,-0.25738 -0.4372247,-0.25738 -0.02666,0 -0.09598,0.0143 -0.06932,0.0143 -0.09065,0.0143 0.4798807,0.29315 0.4798807,0.9652095 z m 3.209876,-0.22879 v 3.5247799 q 0,0.22164 -0.01068,0.32888 -0.0056,0.1001 -0.04262,0.20019 -0.03203,0.093 -0.133303,0.2359397 h 0.101307 q 0.277265,0 0.367913,-0.2716897 0.09062,-0.27883 0.09062,-0.82936 V 5.9083654 q 0,-0.6148695 -0.202624,-0.9365995 -0.202614,-0.32174 -0.714489,-0.35034 0.287933,0.15729 0.415897,0.45758 0.127974,0.29313 0.127974,0.8007595 z m 6.382419,2.90991 0.213273,0.2216399 q -0.239939,0.60056 -0.570518,0.98664 -0.330588,0.3860897 -0.730487,0.5719797 -0.39457,0.18589 -0.826465,0.18589 -0.586516,0 -1.093061,-0.37893 Q 16.21639,9.9979553 15.923127,9.2830053 15.629864,8.5680254 15.629864,7.6600254 q 0,-0.71496 0.175958,-1.34414 0.181287,-0.62916 0.495877,-1.1081895 0.319919,-0.47903 0.735816,-0.74357 0.421227,-0.27168 0.895777,-0.27168 0.479888,0 0.911774,0.27168 0.437224,0.26454 0.693162,0.73642 0.186626,0.3431895 0.266606,0.7078195 0.08533,0.35748 0.133293,0.8651 h -3.220531 q 0.02135,0.74356 0.186617,1.25834 0.170628,0.51478 0.437224,0.82936 0.271935,0.3145799 0.575866,0.4504299 0.303922,0.13584 0.581187,0.13584 0.671834,0 1.226364,-0.6577599 z m -0.94377,-2.47379 h 0.373242 q -0.01597,-0.80076 -0.245269,-1.1796895 -0.22928,-0.38608 -0.767812,-0.51477 0.341247,0.20734 0.490547,0.54337 0.149292,0.3288795 0.149292,1.0080995 z m -2.031492,0 h 1.860864 v -0.23593 q 0,-0.41468 -0.111966,-0.7364195 -0.111976,-0.32888 -0.309261,-0.50048 -0.191946,-0.17874 -0.442554,-0.17874 -0.405238,0 -0.687832,0.48619 -0.282594,0.4790095 -0.309251,1.1653795 z m 0.048,-1.4084795 Q 15.8005,5.9655554 15.8005,7.6814754 q 0,1.24404 0.591854,2.0376499 0.597185,0.7864597 1.375656,0.7864597 0.453222,0 0.906444,-0.24308 0.458552,-0.25024 0.773142,-0.7364197 -0.325249,0.27884 -0.666496,0.45758 -0.335917,0.1715897 -0.805137,0.1715897 -0.794469,0 -1.327671,-0.7435597 -0.527873,-0.7435599 -0.527873,-1.9375499 0,-0.75788 0.175958,-1.35844 0.175957,-0.60058 0.501215,-1.2082995 z m 8.941784,1.0724595 v 3.0314499 q 0,0.42898 0.09062,0.66491 0.09598,0.22879 0.255937,0.3288897 0.15996,0.0929 0.453222,0.12154 0.293263,0.0286 0.543862,0.0429 v 0.39324 h -3.876368 v -0.39324 q 0.431885,-0.0143 0.645168,-0.0644 0.218612,-0.0501 0.341247,-0.1930297 0.127973,-0.143 0.170628,-0.36464 0.048,-0.22879 0.048,-0.6220199 V 2.6266259 q 0,-0.78646 -0.0533,-1.11534 -0.048,-0.3289 -0.303922,-0.48619 -0.250608,-0.15729001 -0.847792,-0.15729001 v -0.39323 h 3.668424 q 0.245269,0 1.173041,0.1144 0.298592,0.0358 0.634509,0.23593 0.341247,0.20019001 0.63451,0.55053001 0.298592,0.34318 0.479879,0.82221 0.181287,0.47187 0.181287,1.02955 0,0.62202 -0.186617,1.12249 -0.181287,0.50048 -0.565188,0.86511 -0.378582,0.3646395 -0.959768,0.5648195 -0.575857,0.20019 -1.343669,0.20019 z M 24.582324,2.5408759 v 6.7206794 q 0,0.67921 -0.389231,0.9079997 h 0.138632 q 0.591846,0 0.591846,-0.7507097 V 2.8769059 q 0,-0.87941 -0.01068,-1.15109 -0.0056,-0.27168 -0.06936,-0.46473 -0.05868,-0.19305 -0.218612,-0.27883001 -0.154621,-0.093 -0.479879,-0.1287 0.213282,0.13584 0.298592,0.30743001 0.08533,0.1716 0.111975,0.48618 0.02665,0.31458 0.02665,0.89371 z m 1.157052,3.0457595 h 0.746476 q 0.677164,0 1.125057,-0.2144995 0.447893,-0.22163 0.687832,-0.73641 0.23994,-0.52193 0.23994,-1.39419 0,-1.30839 -0.655837,-1.959 -0.261276,-0.25739 -0.527873,-0.33604001 -0.266596,-0.0786 -0.661166,-0.0786 -0.453222,0 -0.655837,0.17159001 -0.197294,0.17159 -0.250607,0.51477 -0.048,0.34319 -0.048,1.01526 z m 2.042152,-0.0787 q 0.639848,-0.1286995 0.954438,-0.6792195 0.31459,-0.55052 0.31459,-1.55863 0,-1.0653 -0.31992,-1.59438 -0.319929,-0.53622 -0.959768,-0.71495001 0.303922,0.20734001 0.517205,0.54336001 0.213283,0.33604 0.319919,0.78647 0.106646,0.45043 0.106646,0.9795 0,1.70163 -0.93311,2.2378495 z m 2.959272,1.98045 q 0,-0.91516 0.31992,-1.67302 0.325248,-0.7578695 0.879778,-1.1868395 0.559859,-0.43613 1.237032,-0.43613 0.661167,0 1.205037,0.42183 0.5492,0.42182 0.863781,1.1653895 0.31459,0.74357 0.31459,1.65157 0,0.69352 -0.191946,1.31554 -0.186626,0.6148699 -0.522534,1.0652899 -0.330588,0.4432797 -0.762483,0.6863697 -0.431895,0.24309 -0.927772,0.24309 -0.666505,0 -1.221035,-0.40753 Q 31.385968,9.9264153 31.06072,9.1900053 30.7408,8.4464354 30.7408,7.4883854 Z m 1.89286,2.9742596 Q 31.940498,9.8978153 31.593922,9.1256553 31.247336,8.3534954 31.247336,7.4311854 q 0,-0.70067 0.165289,-1.22974 0.16529,-0.52907 0.431895,-0.9079995 0.271945,-0.38609 0.677164,-0.79362 -0.538531,0.25739 -0.901105,0.72212 -0.362584,0.4647295 -0.533203,1.0652995 -0.170618,0.59342 -0.170618,1.25834 0,0.48617 0.111966,0.95805 0.111975,0.4718799 0.325258,0.8508099 0.218603,0.37893 0.538522,0.6649097 0.319929,0.28599 0.741156,0.44329 z M 32.063133,7.0808554 q 0,1.52287 0.330587,2.3951399 0.330588,0.8650997 0.858461,0.8650997 0.266596,0 0.495877,-0.29313 0.22928,-0.3002897 0.362574,-0.8794097 0.138642,-0.5862699 0.138642,-1.4299299 0,-1.48713 -0.298602,-2.3164895 -0.293262,-0.83651 -0.815796,-0.83651 -0.506546,0 -0.78914,0.62917 -0.282603,0.6220195 -0.282603,1.8660595 z m 1.88221,3.0100096 q 0.399908,-0.2931297 0.613191,-0.9294597 0.213273,-0.6363199 0.213273,-1.5586299 0,-2.2735795 -1.045077,-2.9670995 0.373243,0.50047 0.533212,1.2297395 0.165289,0.72926 0.165289,1.959 0,0.77931 -0.122644,1.3083899 -0.117296,0.52193 -0.357244,0.9580597 z m 4.047005,-5.8984691 v 5.1691994 q 0,0.32889 0.048,0.50047 0.0533,0.1644497 0.191936,0.2287997 0.143972,0.0644 0.437225,0.0786 v 0.39323 h -2.490044 v -0.39323 q 0.330588,-0.0143 0.458561,-0.1787397 0.133293,-0.16445 0.133293,-0.58627 V 6.1227554 q 0,-0.30743 -0.15463,-0.57197 -0.15463,-0.2645395 -0.437224,-0.3932295 v -0.22879 l 1.594277,-0.73641 z m -1.045087,1.9518495 v 3.3960899 q 0,0.41468 -0.218612,0.6291697 0.293254,0 0.426556,-0.1787397 0.138642,-0.17875 0.138642,-0.58627 V 6.0513054 q 0,-0.45758 -0.165298,-0.7006595 -0.16529,-0.25025 -0.431886,-0.25025 -0.122635,0 -0.197285,0.0143 0.447883,0.31458 0.447883,1.0295495 z m 0.389241,-5.43372951 q 0.202623,0 0.378572,0.13584 0.175957,0.12869 0.277274,0.35748001 0.101298,0.22879 0.101298,0.50048 0,0.27169 -0.101298,0.50762 -0.101317,0.22879 -0.277274,0.36463 -0.175949,0.13585 -0.378572,0.13585 -0.303922,0 -0.522534,-0.30028 -0.218612,-0.3003 -0.218612,-0.70782 0,-0.26454 0.09598,-0.49333 0.101308,-0.23594001 0.271926,-0.36463001 0.175958,-0.13584 0.373243,-0.13584 z m 0.09062,0.22879 q -0.31459,0 -0.485227,0.20018001 -0.17061,0.2002 -0.17061,0.55054 0,0.33602 0.16528,0.55766 0.16529,0.21449 0.490557,0.23594 -0.170637,-0.20734 -0.250617,-0.36463 -0.07994,-0.16444 -0.07994,-0.41468 0,-0.46473 0.330588,-0.76501001 z M 40.98357,4.1923959 v 0.9509 q 0.447884,-0.46472 0.826465,-0.70781 0.383902,-0.24309 0.911774,-0.24309 1.508959,0 1.508959,2.0090495 v 3.2602399 q 0,0.46473 0.165289,0.5862797 0.165289,0.12154 0.501216,0.12154 v 0.39323 H 42.32724 v -0.39323 q 0.341237,0 0.495867,-0.14299 0.15996,-0.1501397 0.15996,-0.6220197 V 5.9512554 q 0,-0.37893 -0.09062,-0.6363195 -0.08533,-0.26453 -0.255928,-0.40037 -0.170629,-0.13585 -0.415898,-0.13585 -0.303921,0 -0.597184,0.21449 -0.287933,0.20734 -0.639839,0.6363095 v 3.7750299 q 0,0.32173 0.07994,0.49332 0.07994,0.1715997 0.213273,0.2144897 0.138633,0.0429 0.39457,0.0572 v 0.39322 h -2.575353 v -0.39322 q 0.325249,0 0.501197,-0.1144 0.175958,-0.1215397 0.175958,-0.5433697 V 6.3444854 q 0,-0.47187 -0.15996,-0.75786 -0.15996,-0.2931395 -0.517195,-0.4432795 v -0.23594 l 1.684906,-0.71496 z m -1.034408,1.9161095 v 3.2816799 q 0,0.32174 -0.03732,0.46474 -0.03203,0.14298 -0.149292,0.3145797 0.522534,-0.0644 0.522534,-0.7793197 V 5.9798154 q 0,-0.35749 -0.191955,-0.6077295 -0.186617,-0.25738 -0.437225,-0.25738 -0.02665,0 -0.09597,0.0143 -0.06936,0.0143 -0.09062,0.0143 0.47988,0.29315 0.47988,0.9652095 z m 3.209872,-0.22879 v 3.5247799 q 0,0.22164 -0.01068,0.32888 -0.0056,0.1001 -0.04271,0.20019 -0.03203,0.093 -0.133303,0.2359397 h 0.101307 q 0.277265,0 0.367904,-0.2716897 0.09062,-0.27883 0.09062,-0.82936 V 5.9083154 q 0,-0.6148695 -0.202614,-0.9365995 -0.202615,-0.32174 -0.71449,-0.35034 0.287934,0.15729 0.415898,0.45758 0.127964,0.29313 0.127964,0.8007595 z m 2.777977,2.95281 V 4.7643659 h -0.570527 v -0.36463 q 0.46922,-0.47188 0.70383,-0.72212 0.23461,-0.25738 0.442554,-0.57197 0.213283,-0.31458 0.362574,-0.65776 h 0.282605 v 1.86605 h 1.322342 v 0.45043 h -1.322342 v 4.2754894 q 0,0.47189 0.08533,0.70782 0.08533,0.2288 0.287924,0.2288 0.191956,0 0.351915,-0.143 0.165299,-0.14299 0.399909,-0.44329 l 0.197285,0.27884 q -0.3999,0.5505197 -0.735826,0.8222097 -0.330579,0.26454 -0.762483,0.26454 -0.410558,0 -0.639839,-0.24309 -0.229271,-0.24308 -0.319919,-0.6577597 -0.08533,-0.42184 -0.08533,-1.0223999 z m 0.522543,-5.2835995 -0.351915,0.39323 v 4.7473795 q 0,0.9508899 0.181287,1.3870196 0.186617,0.42898 0.661166,0.42898 0.250608,0 0.501207,-0.10725 -0.485209,0.0215 -0.741146,-0.30028 -0.250599,-0.3288797 -0.250599,-1.0867397 z m 5.220028,3.9394595 q 0,-0.91516 0.319928,-1.67302 0.325249,-0.7578695 0.879779,-1.1868395 0.559859,-0.43613 1.237032,-0.43613 0.661176,0 1.205037,0.42183 0.549191,0.42182 0.863781,1.1653895 0.31459,0.74357 0.31459,1.65157 0,0.69352 -0.191946,1.31554 -0.186626,0.6148699 -0.522544,1.0652899 -0.330578,0.4432797 -0.762473,0.6863697 -0.431895,0.24309 -0.927772,0.24309 -0.666505,0 -1.221035,-0.40753 Q 52.324759,9.9264153 51.99951,9.1900053 51.679582,8.4464354 51.679582,7.4883854 Z m 1.892869,2.9742596 Q 52.879289,9.8978153 52.532703,9.1256553 52.186127,8.3534954 52.186127,7.4311854 q 0,-0.70067 0.165299,-1.22974 0.165289,-0.52907 0.431895,-0.9079995 0.271925,-0.38609 0.677154,-0.79362 -0.538531,0.25739 -0.901106,0.72212 -0.362574,0.4647295 -0.533202,1.0652995 -0.170618,0.59342 -0.170618,1.25834 0,0.48617 0.111966,0.95805 0.111975,0.4718799 0.325249,0.8508099 0.218621,0.37893 0.538541,0.6649097 0.319919,0.28599 0.741146,0.44329 z M 53.001923,7.0808554 q 0,1.52287 0.330588,2.3951399 0.330588,0.8650997 0.858461,0.8650997 0.266596,0 0.495877,-0.29313 0.229271,-0.3002897 0.362564,-0.8794097 0.138642,-0.5862699 0.138642,-1.4299299 0,-1.48713 -0.298592,-2.3164895 -0.293263,-0.83651 -0.815806,-0.83651 -0.506536,0 -0.78913,0.62917 -0.282604,0.6220195 -0.282604,1.8660595 z m 1.882211,3.0100096 q 0.399899,-0.2931297 0.613182,-0.9294597 0.213273,-0.6363199 0.213273,-1.5586299 0,-2.2735795 -1.045077,-2.9670995 0.373242,0.50047 0.533211,1.2297395 0.16529,0.72926 0.16529,1.959 0,0.77931 -0.122635,1.3083899 -0.117314,0.52193 -0.357244,0.9580597 z m 4.078982,-5.8984691 v 0.9509 q 0.447893,-0.46472 0.826465,-0.70781 0.383901,-0.24309 0.911774,-0.24309 1.508958,0 1.508958,2.0090495 v 3.2602399 q 0,0.46473 0.165299,0.5862797 0.165289,0.12154 0.501197,0.12154 v 0.39323 h -2.570022 v -0.39323 q 0.341247,0 0.495886,-0.14299 0.15996,-0.1501397 0.15996,-0.6220197 V 5.9512554 q 0,-0.37893 -0.09062,-0.6363195 -0.08533,-0.26453 -0.255929,-0.40037 -0.170628,-0.13585 -0.415897,-0.13585 -0.303931,0 -0.597193,0.21449 -0.287924,0.20734 -0.639839,0.6363095 v 3.7750299 q 0,0.32173 0.07994,0.49332 0.07994,0.1715997 0.213282,0.2144897 0.138623,0.0429 0.394579,0.0572 v 0.39322 h -2.575359 v -0.39322 q 0.325239,0 0.501206,-0.1144 0.175949,-0.1215397 0.175949,-0.5433697 V 6.3444854 q 0,-0.47187 -0.15996,-0.75786 -0.159969,-0.2931395 -0.517195,-0.4432795 v -0.23594 l 1.684906,-0.71496 z m -1.034409,1.9161095 v 3.2816799 q 0,0.32174 -0.03732,0.46474 -0.03194,0.14298 -0.149301,0.3145797 0.522543,-0.0644 0.522543,-0.7793197 V 5.9798154 q 0,-0.35749 -0.191964,-0.6077295 -0.186617,-0.25738 -0.437216,-0.25738 -0.02665,0 -0.09599,0.0143 -0.06927,0.0143 -0.09062,0.0143 0.47987,0.29315 0.47987,0.9652095 z m 3.209872,-0.22879 v 3.5247799 q 0,0.22164 -0.01068,0.32888 -0.0056,0.1001 -0.04262,0.20019 -0.03194,0.093 -0.133303,0.2359397 h 0.101307 q 0.277265,0 0.367913,-0.2716897 0.09062,-0.27883 0.09062,-0.82936 V 5.9083154 q 0,-0.6148695 -0.202615,-0.9365995 -0.202614,-0.32174 -0.714489,-0.35034 0.287933,0.15729 0.415897,0.45758 0.127964,0.29313 0.127964,0.8007595 z m 6.382419,2.90991 0.213283,0.2216399 q -0.239949,0.60056 -0.570528,0.98664 -0.330587,0.3860897 -0.730487,0.5719797 -0.394569,0.18589 -0.826464,0.18589 -0.586516,0 -1.093052,-0.37893 -0.501216,-0.3789397 -0.794479,-1.0938897 -0.293253,-0.7149799 -0.293253,-1.6229799 0,-0.71496 0.175948,-1.34414 0.181287,-0.62916 0.495877,-1.1081895 0.319929,-0.47903 0.735817,-0.74357 0.421236,-0.27168 0.895786,-0.27168 0.479879,0 0.911764,0.27168 0.437234,0.26454 0.693162,0.73642 0.186626,0.3431895 0.266597,0.7078195 0.08533,0.35748 0.133312,0.8651 H 64.51375 q 0.02126,0.74356 0.186607,1.25834 0.170628,0.51478 0.437225,0.82936 0.271944,0.3145799 0.575856,0.4504299 0.303931,0.13584 0.581205,0.13584 0.671816,0 1.226355,-0.6577599 z m -0.94377,-2.47379 h 0.373243 q -0.01606,-0.80076 -0.245279,-1.1796895 -0.229262,-0.38608 -0.767803,-0.51477 0.341247,0.20734 0.490548,0.54337 0.149291,0.3288795 0.149291,1.0080995 z m -2.031492,0 H 66.4066 v -0.23593 q 0,-0.41468 -0.111957,-0.7364195 -0.111975,-0.32888 -0.309269,-0.50048 -0.191946,-0.17874 -0.442554,-0.17874 -0.405238,0 -0.687823,0.48619 -0.282604,0.4790095 -0.309261,1.1653795 z m 0.048,-1.4084795 q -0.997093,1.0581495 -0.997093,2.7740695 0,1.24404 0.591855,2.0376499 0.597184,0.7864597 1.375655,0.7864597 0.453223,0 0.906445,-0.24308 0.458561,-0.25024 0.773142,-0.7364197 -0.325249,0.27884 -0.666505,0.45758 -0.335918,0.1715897 -0.805129,0.1715897 -0.794469,0 -1.327671,-0.7435597 -0.527872,-0.7435599 -0.527872,-1.9375499 0,-0.75788 0.175966,-1.35844 0.175949,-0.60058 0.501207,-1.2082995 z"
       id="path1"
       style="font-size:23.1465px;font-family:'Imprint MT Shadow';-inkscape-font-specification:'Imprint MT Shadow';fill:#000961;fill-opacity:1;stroke-width:0.237094"
       aria-label="One Point one" />
  </g>
  <script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
</svg>
